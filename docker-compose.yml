version: '3.8'

services:
  vlanvision:
    build: .
    container_name: vlanvision
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - DATABASE_URL=sqlite:////app/instance/vlanvision.db
      - SNMP_COMMUNITY=${SNMP_COMMUNITY:-public}
      - DEFAULT_NETWORK_RANGE=${DEFAULT_NETWORK_RANGE:-192.168.1.0/24}
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_API_KEY=${GRAFANA_API_KEY}
      - NODE_RED_URL=http://node-red:1880
    volumes:
      - vlanvision_data:/app/instance
    networks:
      - vlanvision_net
    depends_on:
      - grafana
      - node-red
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: vlanvision-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app,grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - vlanvision_net
    restart: unless-stopped

  node-red:
    image: nodered/node-red:latest
    container_name: vlanvision-node-red
    ports:
      - "1880:1880"
    environment:
      - NODE_RED_CREDENTIAL_SECRET=${NODE_RED_CREDENTIAL_SECRET:-vlanvision-secret}
    volumes:
      - node_red_data:/data
    networks:
      - vlanvision_net
    restart: unless-stopped

  # Optional: PostgreSQL database for production use
  # Uncomment to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: vlanvision-db
  #   environment:
  #     - POSTGRES_USER=vlanvision
  #     - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
  #     - POSTGRES_DB=vlanvision
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - vlanvision_net
  #   restart: unless-stopped

volumes:
  vlanvision_data:
  grafana_data:
  node_red_data:
  # postgres_data:

networks:
  vlanvision_net:
    driver: bridge